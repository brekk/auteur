// Generated by CoffeeScript 1.7.1
var auteur, classConstants, _;

_ = require('lodash');


/**
* The Auteur is the automaton that manages the differences between different implementations.
* It behaves as a singleton (per thread/process), and is modeled after gulp and winston.
* @class Auteur
 */

auteur = exports;

require('pkginfo')(module, 'version');

auteur.cli = function() {
  console.log("ostensibly, the CLI method should enable some kind of differing functionality");
  return auteur;
};

classConstants = {
  _CLASS_PROJECT: 'project',
  _CLASS_POST: 'post',
  _CLASS_AUTHOR: 'author',
  _CLASS_BOOKMARK: 'bookmark'
};

_.each(classConstants, function(prop, key) {
  return Object.defineProperty(auteur, key, {
    enumerable: false,
    writable: false,
    configurable: false,
    value: prop
  });
});

Object.defineProperty(auteur, '_classes', {
  enumerable: false,
  writable: false,
  configurable: false,
  value: [auteur._CLASS_PROJECT, auteur._CLASS_POST, auteur._CLASS_AUTHOR, auteur._CLASS_BOOKMARK]
});

auteur.isValidClass = function(className) {
  if (!_.isString(className)) {
    throw new TypeError("Expected className to be string.");
  }
  return _.contains(auteur._classes, className.toLowerCase());
};

auteur.create = function(kind) {
  var args, first, name, rest;
  args = _.rest(arguments);
  if (!this.isValidClass(kind)) {
    throw new TypeError("Expected kind to be one of [ " + (auteur._classes.join(', ')) + " ].");
  }
  console.log(">> auteur create " + kind);
  first = kind.substr(0, 1).toUpperCase();
  rest = kind.substr(1);
  name = first + rest;
  return this['create' + name].apply(this, args);
};

auteur.createProject = function() {
  return console.log("createProject", arguments);
};

auteur.createPost = function() {
  return console.log("createPost", arguments);
};

auteur.createAuthor = function() {
  return console.log("createAuthor", arguments);
};

auteur.createBookmark = function() {
  return console.log("createBookmark", arguments);
};

auteur.test = function(kind) {
  var args;
  args = _.rest(arguments);
  if (!this.isValidClass(kind)) {
    throw new TypeError("Expected kind to be one of [ " + (auteur._classes.join(', ')) + " ].");
  }
  return console.log(">> auteur test " + kind);
};

auteur.convert = function(postName) {
  return console.log(">> auteur convert " + postName);
};
